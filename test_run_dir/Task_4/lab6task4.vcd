$date
2021-09-29T16:11+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module lab6task4 $end
 $var wire 4 ! io_out $end
 $var wire 1 " _GEN_2 $end
 $var wire 1 # _T $end
 $var wire 5 $ _counter_T_2 $end
 $var wire 4 % _GEN_5 $end
 $var wire 5 & _counter_T $end
 $var wire 4 ' _GEN_1 $end
 $var wire 4 ( _counter_T_1 $end
 $var wire 1 ) _GEN_4 $end
 $var wire 4 * counter $end
 $var wire 1 + clock $end
 $var wire 4 , _counter_T_3 $end
 $var wire 1 - _GEN_0 $end
 $var wire 1 . reset $end
 $var wire 4 / _GEN_3 $end
 $var wire 1 0 up_down $end
$upscope $end
$enddefinitions $end
$dumpvars
b0000 '
b00000 $
b0000 (
0-
b0000 /
0.
b0000 !
b00000 &
00
0"
b0000 *
0)
0#
b0000 ,
0+
b0000 %
$end
#0
b0001 %
1"
1.
b11111 &
b0001 '
b00001 $
b1111 (
b0001 /
b0001 ,
1)
#1
10
1-
1+
#6
0.
0+
#11
b0001 !
b0010 %
b00000 &
b0001 *
b0010 '
b00010 $
1+
b0000 (
b0000 /
b0010 ,
#16
0+
#21
b0010 !
b0011 %
b00001 &
b0010 *
b0011 '
b00011 $
1+
b0001 (
b0001 /
b0011 ,
#26
0+
#31
b0011 !
b0100 %
b00010 &
b0011 *
b0100 '
b00100 $
1+
b0010 (
b0010 /
b0100 ,
#36
0+
#41
b0100 !
b0101 %
b00011 &
b0100 *
b0101 '
b00101 $
1+
b0011 (
b0011 /
b0101 ,
#46
0+
#51
b0101 !
b0110 %
b00100 &
b0101 *
b0110 '
b00110 $
1+
b0100 (
b0100 /
b0110 ,
#56
0+
#61
b0110 !
b0111 %
b00101 &
b0110 *
b0111 '
b00111 $
1+
b0101 (
b0101 /
b0111 ,
#66
0+
#71
b0111 !
b1000 %
b00110 &
b0111 *
b1000 '
b01000 $
1+
b0110 (
b0110 /
b1000 ,
#76
0+
#81
b1000 !
b1001 %
b00111 &
b1000 *
b1001 '
b01001 $
1+
b0111 (
b0111 /
b1001 ,
#86
0+
#91
b1001 !
b1010 %
b01000 &
b1001 *
b1010 '
b01010 $
1+
b1000 (
b1000 /
b1010 ,
#96
0+
#101
b1010 !
0-
b1001 %
b01001 &
1#
b1010 *
b1001 '
b01011 $
1+
b1001 (
b1001 /
b1011 ,
0)
#106
0+
#111
b1001 !
00
b1000 %
0"
b01000 &
0#
b1001 *
b1010 '
b01010 $
1+
b1000 (
b1000 /
b1010 ,
#116
0+
#121
b1000 !
b0111 %
b00111 &
b1000 *
b1001 '
b01001 $
1+
b0111 (
b0111 /
b1001 ,
#126
0+
#131
b0111 !
b0110 %
b00110 &
b0111 *
b1000 '
b01000 $
1+
b0110 (
b0110 /
b1000 ,
#136
0+
#141
b0110 !
b0101 %
b00101 &
b0110 *
b0111 '
b00111 $
1+
b0101 (
b0101 /
b0111 ,
#146
0+
#151
b0101 !
b0100 %
b00100 &
b0101 *
b0110 '
b00110 $
1+
b0100 (
b0100 /
b0110 ,
#156
0+
#161
b0100 !
b0011 %
b00011 &
b0100 *
b0101 '
b00101 $
1+
b0011 (
b0011 /
b0101 ,
#166
0+
#171
b0011 !
b0010 %
b00010 &
b0011 *
b0100 '
b00100 $
1+
b0010 (
b0010 /
b0100 ,
#176
0+
#181
b0010 !
b0001 %
b00001 &
b0010 *
b0011 '
b00011 $
1+
b0001 (
b0001 /
b0011 ,
#186
0+
#191
b0001 !
b0000 %
b00000 &
b0001 *
b0010 '
b00010 $
1+
b0000 (
b0000 /
b0010 ,
#196
0+
#201
b0000 !
b0001 %
1"
b11111 &
b0000 *
b0001 '
b00001 $
1+
b1111 (
b0001 /
b0001 ,
1)
#206
0+
#211
b0001 !
10
1-
b0010 %
b00000 &
b0001 *
b0010 '
b00010 $
1+
b0000 (
b0000 /
b0010 ,
#216
0+
#221
b0010 !
b0011 %
b00001 &
b0010 *
b0011 '
b00011 $
1+
b0001 (
b0001 /
b0011 ,
#226
0+
#231
b0011 !
b0100 %
b00010 &
b0011 *
b0100 '
b00100 $
1+
b0010 (
b0010 /
b0100 ,
#236
0+
#241
b0100 !
b0101 %
b00011 &
b0100 *
b0101 '
b00101 $
1+
b0011 (
b0011 /
b0101 ,
#246
0+
#251
b0101 !
b0110 %
b00100 &
b0101 *
b0110 '
b00110 $
1+
b0100 (
b0100 /
b0110 ,
#256
0+
#261
b0110 !
b0111 %
b00101 &
b0110 *
b0111 '
b00111 $
1+
b0101 (
b0101 /
b0111 ,
#266
0+
#271
b0111 !
b1000 %
b00110 &
b0111 *
b1000 '
b01000 $
1+
b0110 (
b0110 /
b1000 ,
#276
0+
#281
b1000 !
b1001 %
b00111 &
b1000 *
b1001 '
b01001 $
1+
b0111 (
b0111 /
b1001 ,
#286
0+
#291
b1001 !
b1010 %
b01000 &
b1001 *
b1010 '
b01010 $
1+
b1000 (
b1000 /
b1010 ,
#296
0+
#301
b1010 !
0-
b1001 %
b01001 &
1#
b1010 *
b1001 '
b01011 $
1+
b1001 (
b1001 /
b1011 ,
0)
#306
0+
#311
b1001 !
00
b1000 %
0"
b01000 &
0#
b1001 *
b1010 '
b01010 $
1+
b1000 (
b1000 /
b1010 ,
#316
0+
#321
b1000 !
b0111 %
b00111 &
b1000 *
b1001 '
b01001 $
1+
b0111 (
b0111 /
b1001 ,
#326
0+
#331
b0111 !
b0110 %
b00110 &
b0111 *
b1000 '
b01000 $
1+
b0110 (
b0110 /
b1000 ,
#336
0+
#341
b0110 !
b0101 %
b00101 &
b0110 *
b0111 '
b00111 $
1+
b0101 (
b0101 /
b0111 ,
#346
0+
#351
b0101 !
b0100 %
b00100 &
b0101 *
b0110 '
b00110 $
1+
b0100 (
b0100 /
b0110 ,
#356
0+
#361
b0100 !
b0011 %
b00011 &
b0100 *
b0101 '
b00101 $
1+
b0011 (
b0011 /
b0101 ,
#366
0+
#371
b0011 !
b0010 %
b00010 &
b0011 *
b0100 '
b00100 $
1+
b0010 (
b0010 /
b0100 ,
#376
0+
#381
b0010 !
b0001 %
b00001 &
b0010 *
b0011 '
b00011 $
1+
b0001 (
b0001 /
b0011 ,
#386
0+
#391
b0001 !
b0000 %
b00000 &
b0001 *
b0010 '
b00010 $
1+
b0000 (
b0000 /
b0010 ,
#396
0+
#401
b0000 !
b0001 %
1"
b11111 &
b0000 *
b0001 '
b00001 $
1+
b1111 (
b0001 /
b0001 ,
1)
#406
0+
#411
b0001 !
10
1-
b0010 %
b00000 &
b0001 *
b0010 '
b00010 $
1+
b0000 (
b0000 /
b0010 ,
#416
0+
