$date
2021-10-13T07:04+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module Control_type_decode $end
 $var wire 1 ! _GEN_37 $end
 $var wire 1 " _GEN_22 $end
 $var wire 1 # _GEN_10 $end
 $var wire 1 $ _T $end
 $var wire 1 % _GEN_31 $end
 $var wire 1 & _GEN_19 $end
 $var wire 1 ' _GEN_25 $end
 $var wire 7 ( io_opcode $end
 $var wire 1 ) io_S_type $end
 $var wire 1 * _GEN_13 $end
 $var wire 1 + _GEN_42 $end
 $var wire 1 , io_I_type $end
 $var wire 1 - _GEN_24 $end
 $var wire 1 . _GEN_39 $end
 $var wire 1 / io_JALR $end
 $var wire 1 0 _GEN_33 $end
 $var wire 1 1 _GEN_12 $end
 $var wire 1 2 _GEN_7 $end
 $var wire 1 3 _GEN_15 $end
 $var wire 1 4 _GEN_36 $end
 $var wire 1 5 _GEN_21 $end
 $var wire 1 6 _GEN_18 $end
 $var wire 1 7 _GEN_41 $end
 $var wire 1 8 clock $end
 $var wire 1 9 _GEN_23 $end
 $var wire 1 : _GEN_38 $end
 $var wire 1 ; _GEN_17 $end
 $var wire 1 < _GEN_32 $end
 $var wire 1 = _GEN_29 $end
 $var wire 1 > _GEN_6 $end
 $var wire 1 ? io_Load $end
 $var wire 1 @ reset $end
 $var wire 1 A _GEN_3 $end
 $var wire 1 B io_SB_type $end
 $var wire 1 C io_JAL $end
 $var wire 1 D io_AUIPC $end
 $var wire 1 E _GEN_34 $end
 $var wire 1 F _GEN_28 $end
 $var wire 1 G io_LUI $end
 $var wire 1 H _GEN_40 $end
 $var wire 1 I io_R_type $end
$upscope $end
$enddefinitions $end
$dumpvars
0%
0C
0;
0&
0<
0'
0=
b0000000 (
0>
06
0!
07
0"
08
0#
09
0:
02
03
0I
04
05
0-
0.
0D
0/
0E
00
0F
01
0)
0G
0?
0*
0H
0@
0+
0A
0,
0$
0B
$end
#0
1@
#1
18
#6
0@
08
1$
b0110011 (
1I
#11
18
#16
08
#21
18
#26
08
0$
b0000000 (
0I
#31
18
#36
08
