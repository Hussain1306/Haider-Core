$date
2021-10-16T21:16+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module ALU $end
 $var wire 1 ! io_alu_branch $end
 $var wire 32 " io_arg_y $end
 $var wire 32 # _io_alu_out_T_1 $end
 $var wire 63 $ _GEN_2 $end
 $var wire 33 % _io_alu_out_T $end
 $var wire 1 & _T $end
 $var wire 32 ' _io_alu_out_T_11 $end
 $var wire 63 ( _GEN_5 $end
 $var wire 5 ) io_alu_op $end
 $var wire 63 * _GEN_8 $end
 $var wire 63 + _io_alu_out_T_17 $end
 $var wire 32 , io_arg_x $end
 $var wire 33 - _io_alu_out_T_3 $end
 $var wire 32 . _io_alu_out_T_6 $end
 $var wire 63 / _GEN_7 $end
 $var wire 32 0 _io_alu_out_T_9 $end
 $var wire 32 1 io_alu_out $end
 $var wire 32 2 _GEN_1 $end
 $var wire 32 3 _io_alu_out_T_10 $end
 $var wire 63 4 _GEN_4 $end
 $var wire 32 5 _io_alu_out_T_13 $end
 $var wire 1 6 clock $end
 $var wire 32 7 _io_alu_out_T_8 $end
 $var wire 32 8 _io_alu_out_T_2 $end
 $var wire 32 9 _GEN_11 $end
 $var wire 32 : _io_alu_out_T_5 $end
 $var wire 63 ; _GEN_6 $end
 $var wire 32 < _GEN_0 $end
 $var wire 63 = _GEN_9 $end
 $var wire 1 > reset $end
 $var wire 63 ? _GEN_3 $end
 $var wire 5 @ _io_alu_out_T_12 $end
 $var wire 32 A _io_alu_out_T_4 $end
 $var wire 32 B _io_alu_out_T_7 $end
$upscope $end
$enddefinitions $end
$dumpvars
b000000000000000000000000000000000000000000000000000000000000000 4
b00000000000000000000000000000000 <
0&
b00000000000000000000000000000000 '
b000000000000000000000000000000000000000000000000000000000000000 /
0>
06
b00000000000000000000000000000000 7
0!
b00000000000000000000000000000000 "
b00000000000000000000000000000000 8
b00000000000000000000000000000000 #
b00000000000000000000000000000000 9
b000000000000000000000000000000000000000000000000000000000000000 *
b00000000000000000000000000000000 :
b00000000000000000000000000000000 2
b000000000000000000000000000000000000000000000000000000000000000 +
b00000 )
b00000000000000000000000000000000 3
b000000000000000000000000000000000000000000000000000000000000000 $
b00000 @
b00000000000000000000000000000000 5
b000000000000000000000000000000000000000000000000000000000000000 ;
b00000000000000000000000000000000 .
b000000000000000000000000000000000000000000000000000000000000000 =
b000000000000000000000000000000000000000000000000000000000000000 (
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b000000000000000000000000000000000 -
b000000000000000000000000000000000000000000000000000000000000000 ?
b000000000000000000000000000000000 %
b00000000000000000000000000000000 A
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 B
$end
#0
1&
1>
#1
16
#6
b00000000000000000000000000100001 3
b00000000000000000000000000001100 B
b111111111111111111111111111011111 -
b000000000000000000000000000111001 %
b00000000000000000000000000001100 .
0&
b00000000000000000000000000000000 5
b00000000000000000000000000100001 '
06
b111111111111111111111111111111111111111111111111111111111011111 =
b00000000000000000000000000101101 7
0>
b00000 )
b00000000000000000000000000101101 0
b00000000000000000000000000000000 "
b11111111111111111111111111011111 1
b01101 @
b00000000000000000000000000111001 8
b00000000000000000000000000111001 #
b111111111111111111111111111111111111111111111111111111111011111 *
b11111111111111111111111111011111 9
b000000000000000000000000000000000000000000000011000000000000000 +
b11111111111111111111111111011111 :
b11111111111111111111111111011111 A
b00000000000000000000000000000000 ,
