;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit ALU : 
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip alu_op : UInt<5>, flip arg_x : SInt<32>, flip arg_y : SInt<32>, alu_branch : UInt<1>, alu_out : SInt<32>}
    
    io.alu_out <= asSInt(UInt<1>("h00")) @[ALU.scala 16:16]
    node _T = eq(io.alu_op, UInt<1>("h00")) @[ALU.scala 18:22]
    when _T : @[ALU.scala 18:30]
      node _io_alu_out_T = add(io.arg_x, io.arg_y) @[ALU.scala 19:32]
      node _io_alu_out_T_1 = tail(_io_alu_out_T, 1) @[ALU.scala 19:32]
      node _io_alu_out_T_2 = asSInt(_io_alu_out_T_1) @[ALU.scala 19:32]
      io.alu_out <= _io_alu_out_T_2 @[ALU.scala 19:20]
      skip @[ALU.scala 18:30]
    else : @[ALU.scala 21:35]
      node _T_1 = eq(io.alu_op, UInt<1>("h01")) @[ALU.scala 21:27]
      when _T_1 : @[ALU.scala 21:35]
        node _io_alu_out_T_3 = sub(io.arg_x, io.arg_y) @[ALU.scala 22:32]
        node _io_alu_out_T_4 = tail(_io_alu_out_T_3, 1) @[ALU.scala 22:32]
        node _io_alu_out_T_5 = asSInt(_io_alu_out_T_4) @[ALU.scala 22:32]
        io.alu_out <= _io_alu_out_T_5 @[ALU.scala 22:20]
        skip @[ALU.scala 21:35]
      else : @[ALU.scala 24:35]
        node _T_2 = eq(io.alu_op, UInt<2>("h02")) @[ALU.scala 24:27]
        when _T_2 : @[ALU.scala 24:35]
          node _io_alu_out_T_6 = and(io.arg_x, io.arg_y) @[ALU.scala 25:32]
          node _io_alu_out_T_7 = asSInt(_io_alu_out_T_6) @[ALU.scala 25:32]
          io.alu_out <= _io_alu_out_T_7 @[ALU.scala 25:20]
          skip @[ALU.scala 24:35]
        else : @[ALU.scala 27:35]
          node _T_3 = eq(io.alu_op, UInt<2>("h03")) @[ALU.scala 27:27]
          when _T_3 : @[ALU.scala 27:35]
            node _io_alu_out_T_8 = or(io.arg_x, io.arg_y) @[ALU.scala 28:33]
            node _io_alu_out_T_9 = asSInt(_io_alu_out_T_8) @[ALU.scala 28:33]
            io.alu_out <= _io_alu_out_T_9 @[ALU.scala 28:21]
            skip @[ALU.scala 27:35]
          else : @[ALU.scala 30:35]
            node _T_4 = eq(io.alu_op, UInt<3>("h04")) @[ALU.scala 30:27]
            when _T_4 : @[ALU.scala 30:35]
              node _io_alu_out_T_10 = xor(io.arg_x, io.arg_y) @[ALU.scala 31:33]
              node _io_alu_out_T_11 = asSInt(_io_alu_out_T_10) @[ALU.scala 31:33]
              io.alu_out <= _io_alu_out_T_11 @[ALU.scala 31:21]
              skip @[ALU.scala 30:35]
            else : @[ALU.scala 33:35]
              node _T_5 = eq(io.alu_op, UInt<3>("h05")) @[ALU.scala 33:27]
              when _T_5 : @[ALU.scala 33:35]
                node _io_alu_out_T_12 = bits(io.arg_y, 4, 0) @[ALU.scala 34:43]
                node _io_alu_out_T_13 = dshr(io.arg_x, _io_alu_out_T_12) @[ALU.scala 34:32]
                io.alu_out <= _io_alu_out_T_13 @[ALU.scala 34:20]
                skip @[ALU.scala 33:35]
              else : @[ALU.scala 36:35]
                node _T_6 = eq(io.alu_op, UInt<3>("h06")) @[ALU.scala 36:27]
                when _T_6 : @[ALU.scala 36:35]
                  node _io_alu_out_T_14 = bits(io.arg_y, 4, 0) @[ALU.scala 37:43]
                  node _io_alu_out_T_15 = dshr(io.arg_x, _io_alu_out_T_14) @[ALU.scala 37:32]
                  io.alu_out <= _io_alu_out_T_15 @[ALU.scala 37:20]
                  skip @[ALU.scala 36:35]
                else : @[ALU.scala 39:35]
                  node _T_7 = eq(io.alu_op, UInt<3>("h07")) @[ALU.scala 39:27]
                  when _T_7 : @[ALU.scala 39:35]
                    node _io_alu_out_T_16 = bits(io.arg_y, 4, 0) @[ALU.scala 40:43]
                    node _io_alu_out_T_17 = dshl(io.arg_x, _io_alu_out_T_16) @[ALU.scala 40:32]
                    io.alu_out <= _io_alu_out_T_17 @[ALU.scala 40:20]
                    skip @[ALU.scala 39:35]
                  else : @[ALU.scala 49:36]
                    node _T_8 = eq(io.alu_op, UInt<4>("h0a")) @[ALU.scala 49:27]
                    when _T_8 : @[ALU.scala 49:36]
                      io.alu_out <= io.arg_x @[ALU.scala 50:20]
                      skip @[ALU.scala 49:36]
                    else : @[ALU.scala 52:37]
                      node _T_9 = eq(io.alu_op, UInt<4>("h0b")) @[ALU.scala 52:27]
                      when _T_9 : @[ALU.scala 52:37]
                        io.alu_out <= io.arg_y @[ALU.scala 53:20]
                        skip @[ALU.scala 52:37]
                      else : @[ALU.scala 58:16]
                        io.alu_out <= asSInt(UInt<1>("h00")) @[ALU.scala 59:24]
                        skip @[ALU.scala 58:16]
    node _T_10 = bits(io.alu_op, 4, 3) @[ALU.scala 61:19]
    node _T_11 = eq(_T_10, UInt<2>("h02")) @[ALU.scala 61:25]
    node _T_12 = eq(io.alu_out, asSInt(UInt<2>("h01"))) @[ALU.scala 61:53]
    node _T_13 = and(_T_11, _T_12) @[ALU.scala 61:38]
    when _T_13 : @[ALU.scala 61:62]
      io.alu_branch <= UInt<1>("h01") @[ALU.scala 62:27]
      skip @[ALU.scala 61:62]
    else : @[ALU.scala 63:15]
      io.alu_branch <= UInt<1>("h00") @[ALU.scala 64:27]
      skip @[ALU.scala 63:15]
    
